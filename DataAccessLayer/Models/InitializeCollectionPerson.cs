using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SerializeAppForDigitSpace.DataAccessLayer.Models
{
    internal class InitializeCollectionPerson : IDisposable
    {
        Random random = new Random();

        string[] Firstname = new string[] { "Ян", "Яков", "Зиновий", "Харитон", "Ефим", "Юлиан", "Яромир", "Камиль", "Михаил", "Болеслав", "Йозеф", "Пётр", "Евгений", "Богдан", "Чеслав", "Шамиль", "Александр", "Харитон", "Платон", "Харитон", "Цицерон", "Жигер", "Харитон", "Игнат", "Савва", "Чеслав", "Корнелий", "Георгий", "Устин", "Святослав", "Цефас", "Гавриил", "Прохор", "Радислав", "Иван", "Евгений", "Иосиф", "Сава", "Жигер", "Яромир", "Гордей", "Игнатий", "Богдан", "Леопольд", "Влад", "Богдан", "Сава", "Василий", "Ким", "Зуфар", "Харитон", "Николай", "Максим", "Тарас", "Эдуард", "Устин", "Никодим", "Гавриил", "Харитон", "Богдан", "Шамиль", "Иннокентий", "Филипп", "Яков", "Тимофей", "Чеслав", "Шерлок", "Святослав", "Зуфар", "Юлиан", "Бронислав", "Юлий", "Захар", "Виль", "Станислав", "Тимофей", "Эдуард", "Чарльз", "Ждан", "Остап", "Герасим", "Юлий", "Елисей", "Тимур", "Лев", "Богдан", "Яков", "Данила", "Харитон", "Яков", "Евгений", "Ждан", "Валерий", "Яромир", "Йосеф", "Игнат", "Жигер", "Всеволод", "Виль", "Осип", "Гавриил", "Юлий", "Пётр", "Цефас", "Шарль", "Евсей", "Геннадий", "Эдуард", "Тит", "Аким", "Никита", "Емельян", "Людвиг", "Максим", "Нестор", "Святослав", "Григорий", "Станислав", "Август", "Жерар", "Максим", "Тарас", "Шарль", "Лука", "Илларион", "Чарльз", "Максим", "Ждан", "Карим", "Никита", "Эрик", "Ждан", "Лукиллиан", "Станислав", "Матвей", "Юрий", "Оскар", "Йосып", "Илларион", "Огюст", "Ян", "Тимофей", "Чарльз", "Матвей", "Николай", "Борис", "Богдан", "Ярослав", "Богдан", "Тимофей", "Клаус", "Чарльз", "Антонин", "Евстахий", "Цезарь", "Лев", "Чарльз", "Оскар", "Устин", "Георгий", "Донат", "Эдуард", "Кристиан", "Шерлок", "Сергей", "Егор", "Игнат", "Цезарь", "Чеслав", "Богдан", "Спартак", "Фёдор", "Зуфар", "Шарль", "Вениамин", "Харитон", "Юлиан", "Харитон", "Евгений", "Никодим", "Аркадий", "Герман", "Ждан", "Богдан", "Леонид", "Ждан", "Орест", "Максим", "Юлиан", "Витольд", "Цефас", "Устин", "Цицерон", "Харитон", "Корнелий", "Устин", "Ираклий", "Людвиг", "Степан", "Иммануил", "Яромир", "Леопольд", "Пётр", "Шерлок", "Борис", "Ждан", "Ярослав", "Сергей", "Иннокентий", "Артемий", "Назар", "Прохор", "Захар", "Эдуард", "Йомер", "Герасим", "Эрик", "Юлиан", "Зенон", "Семён", "Зураб", "Нестор", "Виталий", "Заур", "Шерлок", "Йомер", "Корнелий", "Эрик", "Юлий", "Цефас", "Чеслав", "Иосиф", "Йозеф", "Оливер", "Чеслав", "Глеб", "Илларион", "Жигер", "Аким", "Харитон", "Казбек", "Устин", "Эрик", "Шамиль", "Динар", "Родион", "Жерар", "Ярослав", "Анатолий", "Осип", "Йосеф", "Павел", "Яков", "Шамиль", "Чеслав", "Тимур", "Юлиан", "Пётр", "Нестор", "Цезарь", "Цезарь", "Чеслав", "Ефим", "Эрик", "Йонас", "Егор", "Герман", "Харитон", "Елисей", "Радислав", "Лев", "Емельян", "Цицерон", "Закир", "Вениамин", "Жигер", "Орландо", "Яромир", "Устин", "Эдуард", "Цефас", "Ростислав", "Святослав", "Тит", "Йоханес", "Зенон", "Яромир", "Родион", "Шамиль", "Даниил", "Устин", "Эдуард", "Богдан", "Бронислав", "Юлиан", "Шарль", "Устин", "Борис", "Фёдор", "Давид", "Василий", "Ананий", "Фёдор", "Любомир", "Эрик", "Станислав", "Шарль", "Виль", "Тимур", "Устин", "Тимур", "Максим", "Йошка", "Никита", "Нестор", "Ждан", "Мирослав", "Иннокентий", "Устин", "Йозеф", "Клаус", "Евгений", "Павел", "Гордей", "Чарльз", "Тимур", "Иннокентий", "Жерар", "Евгений", "Дарий", "Милан", "Дмитрий", "Никита", "Никита", "Игнат", "Богдан", "Марк", "Борис", "Шамиль", "Алексей", "Ждан", "Максим", "Карен", "Зенон", "Яромир", "Вадим", "Остап", "Устин", "Платон", "Людвиг", "Донат", "Конрад", "Прохор", "Ким", "Шамиль", "Вениамин", "Радислав", "Геннадий", "Люций", "Платон", "Глеб", "Владимир", "Кир", "Зигмунд", "Ленар", "Устин", "Яромир", "Феликс", "Эрик", "Святослав", "Болеслав", "Йосеф", "Тимофей", "Семён", "Устин", "Ираклий", "Прохор", "Юлиан", "Илларион", "Добрыня", "Заур", "Харитон", "Фёдор", "Вениамин", "Карл", "Евгений", "Иосиф", "Динар", "Остин", "Шарль", "Геннадий", "Цефас", "Эдуард", "Егор", "Семён", "Никодим", "Фаина", "Рената", "Инга", "Берта", "Йоханна", "Гаянэ", "Регина", "Белла", "Кристина", "Йоханна", "Злата", "Элоиза", "Йолана", "Татьяна", "Ульяна", "Екатерина", "Оксана", "Федосья", "Устинья", "Варвара", "Лариса", "Рада", "Фаина", "Василиса", "Цара", "Юзефа", "Ярослава", "Федосья", "Дарья", "Хильда", "Виктория", "Чеслава", "Фаина", "Гелена", "Жозефина", "Клавдия", "Биргит", "Хильда", "Эдда", "Юнона", "Полина", "Жаклин", "Глафира", "Нина", "Нонна", "Гертруда", "Юзефа", "Юнона", "Евгения", "Федосья", "Ульяна", "Чечилия", "Розалина", "Валентина", "София", "Инесса", "Раиса", "Зоя", "Анжелика", "Инесса", "Нина", "Полина", "Ульяна", "Юна", "Юлия", "Владлена", "Йоони", "Люся", "Прасковья", "Эльвира", "Йосифа", "Жозефина", "Евгения", "Шушана", "Пелагея", "Харитина", "Харитина", "Екатерина", "Марина", "Хильда", "Доминика", "Федосья", "Бронислава", "Василиса", "Федосья", "Ульяна", "Лада", "Рада", "Валентина", "Яся", "Раиса", "Ягетта", "Пелагея", "Харитина", "Доминика", "Светлана", "Бронислава", "Рената", "Цвета", "Ксения", "Эльвира", "Юзефа", "Устинья", "Капитолина", "Эллада", "Гражина", "Марина", "Светлана", "Розалина", "Беатриса", "Светлана", "Тамара", "Полина", "Биргит", "Ольга", "Юнона", "Вероника", "Дарья", "Оксана", "Светлана", "Божена", "Ника", "Вера", "Гражина", "Гаянэ", "Регина", "Пелагея", "Елена", "Таисия", "Рада", "Людмила", "Ярослава", "Клементина", "Светлана", "Дарья", "Мария", "Ирина", "Рената", "Нина", "Василиса", "Шанетта", "Надежда", "Цезария", "Хильда", "Эмилия", "Нелли", "Диана", "Ника", "Зинаида", "Чара", "Юна", "Федосья", "Цилла", "Яся", "Ольга", "Цвета", "Чеслава", "Гелла", "Юнона", "Светлана", "Капитолина", "Эсмеральда", "Светлана", "Таисия", "Харитина", "Людмила", "Розалина", "Ксения", "Злата", "Василиса", "Элла", "Раиса", "Яся", "Эльмира", "Берта", "Дина", "Кристина", "Рената", "Тамара", "Харита", "Федосья", "Софья", "Изабелла", "Глафира", "Альбина", "Йолика", "Юзефа", "Христина", "Дарья", "Елизавета", "Элеонора", "Оксана", "Оксана", "Клементина", "Дина", "Василиса", "Розалина", "Люся" };

        string[] Lastname = new string[] { "Бобров", "Сафонов", "Цветков", "Алексеев", "Трясило", "Савин", "Суханов", "Шкраба", "Передрий", "Василенко", "Житар", "Бердник", "Новиков", "Белов", "Василенко", "Абрамов", "Титов", "Тихонов", "Чикольба", "Уваров", "Посидайло", "Сазонов", "Комиссаров", "Хохлов", "Беляев", "Владимиров", "Крылов", "Виноградов", "Захаров", "Карпенко-Карый", "Фомин", "Моисеенко", "Фокин", "Дмитриев", "Муравьёв", "Вишняков", "Носов", "Емельянов", "Субботин", "Зайцев", "Шестаков", "Бирюков", "Чикольба", "Цушко", "Лапин", "Никонов", "Потапов", "Тимошенко", "Посидайло", "Бобылёв", "Бутко", "Устинов", "Калинин", "Дубченко", "Туров", "Хитрук", "Андрейко", "Семёнов", "Федотов", "Яковенко", "Одинцов", "Кузьмин", "Павлов", "Зуев", "Кравченко", "Сидоров", "Червоний", "Громов", "Палий", "Соколов", "Павлик", "Лихачёв", "Лапин", "Полищук", "Соколов", "Майборода", "Яковенко", "Артемьев", "Киселёв", "Крюков", "Шумейко", "Моисеенко", "Константинов", "Савенко", "Исаев", "Кудрявцев", "Русаков", "Якушев", "Многогрешный", "Якушев", "Молчанов", "Самсонов", "Ковалёв", "Галкин", "Симонов", "Третьяков", "Аксёнов", "Навальный", "Повалий", "Полищук", "Кошелев", "Гуляев", "Панов", "Харитонов", "Шухевич", "Горобчук", "Воробьёв", "Навальный", "Меркушев", "Васильев", "Лебедев", "Щербаков", "Герасимов", "Сирко", "Калинин", "Кулагин", "Селезнёв", "Кулибаба", "Савин", "Горшков", "Муравьёв", "Яровой", "Воронов", "Самсонов", "Павлик", "Петухов", "Панов", "Мамонтов", "Савенко", "Ермаков", "Карпенко-Карый", "Белозёров", "Чикольба", "Зварыч", "Козлов", "Самойлов", "Панфилов", "Захарченко", "Гончар", "Соболев", "Лукин", "Ефимов", "Исаев", "Скляренко", "Титов", "Савельев", "Игнатьев", "Ковалёв", "Белоусов", "Агафонов", "Гришин", "Дементьев", "Гущин", "Орехов", "Правый", "Яровой", "Сусаренко", "Гусев", "Гордеев", "Полищук", "Гордеев", "Грабчак", "Фадеев", "Пархоменко", "Никитин", "Марков", "Саксаганский", "Капустин", "Тарасов", "Михеев", "Белозёров", "Овчинников", "Носов", "Беспалов", "Галкин", "Крюков", "Шкраба", "Кличко", "Емельянов", "Самсонов", "Многогрешный", "Крылов", "Гордеев", "Алчевский", "Комаров", "Иващенко", "Хижняк", "Андрусейко", "Правый", "Иваненко", "Забужко", "Алчевский", "Скляренко", "Моисеенко", "Беляев", "Носов", "Рожков", "Майборода", "Шумейко", "Сафонов", "Пономарёв", "Иващенко", "Елисеев", "Хохлов", "Зуев", "Медведев", "Андрухович", "Шкраба", "Горбунов", "Милославский", "Бородай", "Киселёв", "Степанов", "Павлив", "Кудрявцев", "Никитин", "Кличко", "Вальковский", "Беляев", "Савин", "Кириллов", "Кононов", "Игнатьев", "Яценюк", "Городецкий", "Бобров", "Овчаренко", "Степанов", "Яценюк", "Моисеев", "Мирный", "Лапин", "Сусаренко", "Волков", "Гриневская", "Кузьмин", "Горшков", "Назаров", "Марков", "Цушко", "Предыбайло", "Линник", "Грабчак", "Кравчук", "Ситников", "Щербаков", "Батейко", "Дзюба", "Гайчук", "Щукин", "Кудрявцев", "Тетерин", "Кравченко", "Потапов", "Пономаренко", "Скляренко", "Титов", "Грабчак", "Шухевич", "Андрусейко", "Егоров", "Терещенко", "Лапин", "Пилипейко", "Коломоец", "Абрамов", "Ильин", "Беспалов", "Бачей", "Тимофеев", "Шкраба", "Кудрявцев", "Негода", "Павлик", "Исаев", "Воробьёв", "Кондратьев", "Павленко", "Дьячков", "Червоний", "Карпов", "Иванов", "Туров", "Бердник", "Семёнов", "Таранец", "Гурьев", "Пахомов", "Петровский", "Корнилов", "Палий", "Богданов", "Кудрявцев", "Корнейчук", "Авдеев", "Медведев", "Захарченко", "Емельянова", "Горбунова", "Милославска", "Хитрук", "Игнатьева", "Городецка", "Савельева", "Воробьёва", "Ширяева", "Сасько", "Хохлова", "Яворивска", "Батейко", "Ситникова", "Вальковска", "Горбачёва", "Выговска", "Трофимова", "Горобчук", "Рябова", "Хитрук", "Иващенко", "Михеева", "Милославска", "Григорьева", "Игнатова", "Шашкова", "Желиба", "Хижняк", "Мамонтова", "Горшкова", "Потапова", "Павлив", "Горобчук", "Милославска", "Иванив", "Трясило", "Ковалёва", "Острожска", "Саксаганска", "Стрелкова", "Ланова", "Сорокина", "Белоусова", "Щербак", "Лихачёва", "Таранец", "Дементьева", "Филиппова", "Тимошенко", "Шарова", "Бутко", "Новикова", "Погомий", "Алчевска", "Зуева", "Котова", "Суворова", "Желиба", "Бердник", "Трясило", "Миклашевска", "Спивак", "Доронина", "Алчевска", "Житар", "Гущина", "Вишнякова", "Дубченко", "Полищук", "Белозёрова", "Назарова", "Никифорова", "Андреева", "Несвитайло", "Дроздова", "Веселова", "Петрик", "Ковальчук", "Стрелкова", "Трясило", "Крюкова", "Фокина", "Никифорова", "Захарченко", "Бердник", "Худобяк", "Права", "Бурова", "Рымар", "Лыткина", "Миронова", "Романенко", "Виноградова", "Шумило", "Шкраба", "Пахомова", "Зимина", "Мартынова", "Житар", "Сирко", "Ершова", "Федоренко", "Цушко", "Селезнёва", "Многогрешна", "Тихонова", "Шестакова", "Чернова", "Князева", "Трофимова", "Архипова", "Легойда", "Шашкова", "Логинова", "Суворова", "Гончар", "Власова", "Воробьёва", "Васильева", "Андрейко", "Петухова", "Легойда", "Романенко", "Власова", "Мясникова", "Сазонова", "Самсонова", "Борисова", "Маркова", "Кузьмина", "Колобова", "Комиссарова", "Дидовец", "Рябова", "Сирко", "Логинова", "Савина", "Евдокимова", "Миронова", "Самсонова", "Многогрешна", "Федотова", "Лазарева", "Федункив", "Сидорова", "Кондратьева", "Хохлова", "Федункив", "Лукина", "Петрив", "Кудрявцева", "Блохина", "Некрасова", "Петрова", "Веселова", "Цушко", "Боброва", "Милославска", "Андрусейко", "Дзюба", "Пасичник", "Овчаренко", "Чумак", "Зиновьева", "Моисеева", "Архипова", "Сердюк", "Шевченко", "Герасимова", "Иващенко", "Лапина", "Семёнова", "Абрамова", "Шестакова", "Захарова", "Филиппова", "Агафонова", "Беляева", "Маслова", "Петрик", "Кононова", "Иващенко", "Шумейко", "Маркова", "Одинцова", "Денисова", "Хижняк", "Легойда", "Павлив", "Мухина", "Лаврентьева", "Самойлова", "Многогрешна", "Гаврилова", "Осипова", "Тарасова", "Мазайло", "Яворивска", "Елисеева", "Симонова", "Чухрай", "Гончар", "Кузнецова", "Навальна", "Пилипейко", "Забужко", "Ерёменко", "Крылова", "Соколова", "Котовска", "Матвеева", "Кириленко", "Пономаренко", "Тимофеева", "Тарасюк", "Колобова", "Федункив", "Суворова", "Виноградова", "Моисеенко", "Зуева", "Рыбакова", "Ерёменко", "Голубева", "Соболева", "Силина", "Логинова", "Хохлова", "Трофимова", "Евдокимова", "Петухова", "Терентьева", "Молчанова", "Петрив", "Шумило", "Симонова", "Житар", "Вишнякова", "Родионова", "Шубина", "Петрив", "Елисеева", "Передрий", "Суханова", "Киселёва", "Семёнова", "Комиссарова", "Чумак", "Бородай", "Полищук", "Зыкова", "Суханова", "Матвеева", "Орехова", "Маркова", "Козлова", "Фомина", "Мирна", "Корнилова", "Трофимова", "Кудряшова", "Коломоец", "Лазарева", "Павлова", "Чернова", "Скоропадска", "Фокина", "Дубченко", "Соколова", "Иващенко", "Тарасова", "Кулибаба", "Киселёва", "Бачей", "Трублаевска", "Овчаренко", "Гордеева", "Цушко", "Орехова", "Андреева", "Моисеева", "Многогрешна", "Шухевич", "Выговска", "Яковенко", "Чикольба", "Романова", "Линник", "Анисимова", "Ткаченко", "Барановска", "Толочко", "Шубина", "Селезнёва", "Ковальчук", "Тарасова" };

        List<Person> People = new List<Person>();

        HashSet<string> CreditCardNumbersAll = new HashSet<string>();

        HashSet<string> PhoneNumbersAll = new HashSet<string>();

        int idChild = 1;

        public List<Person> GetPersons()
        {
            CreditCardNumbersAll = GenerateCreditCardNumbers();

            PhoneNumbersAll = GeneratePhoneNumber();

            for (int i = 1; i <= 10000; i++)
            {
                int rndCreditCards = random.Next(0, 9);

                int rndCountPhoneNumbers = random.Next(0, 9);

                string rndFirstName = Firstname[random.Next(Firstname.Count())];

                string rndLastName = Lastname[random.Next(Lastname.Count())];

                int AgeCurrent = AgeDate();

                People.Add(new Person
                {
                    Id = i,
                    TransportId = Guid.NewGuid(),
                    FirstName = rndFirstName,
                    LastName = rndLastName,
                    SequenceId = random.Next(100000, 110000),
                    CreditCardNumbers = CreditCardNumbersAll.Select(CreditCardNumbers => CreditCardNumbers).Take(rndCreditCards).ToArray(),
                    Age = AgeCurrent,
                    Phones = PhoneNumbersAll.Select(PhoneNumbers => PhoneNumbers).Take(rndCountPhoneNumbers).ToArray(),
                    BirthDate = BirthDateCollections(AgeCurrent),
                    Salary = Convert.ToDouble(random.Next(60000, 160000)),
                    IsMarred = IsMarred(),
                    Gender = GetGender<Person>(rndFirstName),
                    Children = GenerateChild(idChild, AgeCurrent)
                });

                CreditCardNumbersAll = CreditCardNumbersAll.Select(CreditCardNumbers => CreditCardNumbers).TakeLast(CreditCardNumbersAll.Count - rndCreditCards).ToHashSet();

                PhoneNumbersAll = PhoneNumbersAll.Select(PhoneNumbers => PhoneNumbers).TakeLast(PhoneNumbersAll.Count - rndCountPhoneNumbers).ToHashSet();
            }

            return People;
        }
        Child[] GenerateChild(int _idChild, int _age)
        {
            Random random = new Random();

            List<Child> childList = new List<Child>();

            int countChild = random.Next(0, 9);

            if (countChild == 0)
            {
                childList = null;

                return null;
            }
            else
            {
                for (int i = 0; i <= countChild; i++)
                {
                    string rndFirstName = Firstname[random.Next(Firstname.Count())];

                    string rndLastName = Lastname[random.Next(Lastname.Count())];

                    _idChild = i + 1;

                    childList.Add(new Child()
                    {
                        Id = _idChild,
                        FirstName = rndFirstName,
                        LastName = rndLastName,
                        Gender = GetGender<Child>(rndFirstName),
                        BirthDate = BirtDateChild(_age),
                    });
                }
                return childList.ToArray();
            }
        }

        /// <summary>
        /// Метод для генерации уникальных CreditCardNumbers
        /// </summary>
        /// <param name="cardsCollection"></param>
        /// <param name="random"></param>
        /// <returns></returns>
        HashSet<string> GenerateCreditCardNumbers()
        {
            HashSet<string> cardsCollection = new HashSet<string>();


            Random random = new Random();

            for (int i = 1; i <= 100000; i++)
            {
                cardsCollection.Add(Convert.ToString(random.NextInt64(4200000000000000, 4299000000000000)));
            }

            return cardsCollection;
        }

        /// <summary>
        /// Метод для генерации номера телефона
        /// </summary>
        /// <returns></returns>
        HashSet<string> GeneratePhoneNumber()
        {
            Random random = new Random();

            HashSet<string> phoneCollection = new HashSet<string>();

            for (int i = 1; i <= 100000; i++)
            {
                phoneCollection.Add($"+7{random.Next(900, 999)}{random.Next(000, 999)}{random.Next(00, 99)}{random.Next(00, 99)}");

            }
            return phoneCollection;
        }


        /// <summary>
        /// Метод для генерации даты рождения
        /// </summary>
        /// <param name="person"></param>
        /// <returns></returns>
        long BirthDateCollections(int _age)
        {
            Random r = new Random();

            DateTime currentDate = DateTime.Now;

            int year = (currentDate.Year - _age - 1970)* 31556926;

            int month = r.Next(01, 12) * 2629743;

            int day = r.Next(01, 31) * 86400;

            Int64 resultDate = year + month + day;

            return resultDate;
        }

        long BirtDateChild(int _age)
        {
            Random r = new Random();


            int ageParent = _age / 31556926;

            int yearBirthChild = (2022 - r.Next(0, Math.Abs(ageParent - 18 - 1970))) * 31556926;

            int month = r.Next(01, 12) * 2629743;

            int day = r.Next(01, 31) * 86400;

            Int64 resultDate = yearBirthChild + month + day;

            return resultDate;
        }

        /// <summary>
        /// Формирование возраста в формате Posix
        /// </summary>
        /// <returns></returns>
        int AgeDate()
        {
            Random r = new Random();

            int _age = r.Next(18, 70);

            DateTime currentDate = DateTime.Now;

            int agePosix = (currentDate.Year - _age - 1970) * 31556926;

            return agePosix;
        }
        /// <summary>
        /// Метод для установки свойства IsMarred
        /// </summary>
        /// <returns></returns>
        bool IsMarred()
        {
            Random random = new Random();

            if (random.Next(0, 1) == 0)
                return false;
            else
                return true;
        }


        /// <summary>
        /// Метод для установки пола
        /// </summary>
        /// <param name="person"></param>
        /// <returns></returns>
        Gender GetGender<T>(string firstName) where T : class
        {
            Gender gender;

            if (firstName.EndsWith('а') || firstName.EndsWith('я'))
            {
                gender = Gender.Female;
            }
            else
            {
                gender = Gender.Male;
            }
            return gender;
        }

        public void Dispose()
        {
            try
            {
                 GC.SuppressFinalize(this);
            }
            catch (System.NullReferenceException nrex)
            {
                Console.WriteLine("Коллекция уже пуста!");
            }
        }  
    }
}
